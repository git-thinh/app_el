!function (e) { if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else { ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).registerPromiseWorker = e() } }(function () { return function e(n, r, t) { function o(i, u) { if (!r[i]) { if (!n[i]) { var s = "function" == typeof require && require; if (!u && s) return s(i, !0); if (f) return f(i, !0); var c = new Error("Cannot find module '" + i + "'"); throw c.code = "MODULE_NOT_FOUND", c } var a = r[i] = { exports: {} }; n[i][0].call(a.exports, function (e) { var r = n[i][1][e]; return o(r || e) }, a, a.exports, e, n, r, t) } return r[i].exports } for (var f = "function" == typeof require && require, i = 0; i < t.length; i++)o(t[i]); return o }({ 1: [function (e, n, r) { n.exports = function (e) { return !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then } }, {}], 2: [function (e, n, r) { "use strict"; var t = e(1); n.exports = function (e) { function n(e, n, r, t) { function o(n) { "function" != typeof self.postMessage ? e.ports[0].postMessage(n) : self.postMessage(n) } r ? ("undefined" != typeof console && "error" in console && console.error("Worker caught an error:", r), o(JSON.stringify([n, { message: r.message }]))) : o(JSON.stringify([n, null, t])) } self.addEventListener("message", function (r) { var o = function (e) { try { return JSON.parse(e) } catch (e) { return !1 } }(r.data); if (o) { var f, i, u, s = o[0], c = o[1]; "function" != typeof e ? n(r, s, new Error("Please pass a function into register().")) : (f = r, i = s, (u = function (e, n) { try { return { res: e(n) } } catch (e) { return { err: e } } }(e, c)).err ? n(f, i, u.err) : t(u.res) ? u.res.then(function (e) { n(f, i, null, e) }, function (e) { n(f, i, e) }) : n(f, i, null, u.res)) } }) } }, { 1: 1 }] }, {}, [2])(2) });